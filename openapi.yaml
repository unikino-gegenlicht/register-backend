openapi: 3.1.0
info:
  title: GEGENLICHT Register
  description: |
    The GEGENLICHT register allows our team members to speed up the handling
    of visitors by directly displaying all reservations and allowing the usage
    of QR codes for loyalty cards and reservation handling. Furthermore, it 
    allows us to handle card payments by an integration of the SumUp Payment
    Switch API.
  version: v1.0.0
  contact:
    name: Unikino GEGENLICHT
    email: info@gegenlicht.net
    url: https://gegenlicht.net/kontakt
  license:
    name: European Publuc License 1.2
    identifier: EUPL-1.2

servers:
  - url: http://localhost:8000
    description: Local Development Server
    
  - url: https://register.gegenlicht.net
    description: Official Instance

components:
  securitySchemes:
    auth:
      type: openIdConnect
      description: |
        Authenticate using OpenID Connect and exchange the `authorization_code`
        for a Token Set via the `/auth/token` route.
      scheme: Bearer
      openIdConnectUrl: https://register.gegenlicht.net/api/auth/.openid-configuration
  schemas:
    Article:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          allowEmptyValues: false
        prices:
          type: object
          properties:
            members:
              type: number
            guests:
              type: number
        style:
          type: object
          properties:
            color:
              type: string
              pattern: "^#(?:[0-9a-fA-F]{3}){1,2}$"
              description: |
                A hexadecimal color code used as the base color for the
                button the article will be shown on.
            icon:
              type: string
              description: |
                The name of the icon used to represent the article on a
                button
              externalDocs:
                description: Icon List
                url: https://lucide.dev/icons/

paths:
  /articles:
    get:
      summary: Get all available articles
      responses:
        200:
          description: Article List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
  /articles/{articleID}:
    parameters:
      - in: path
        name: articleID
        required: true
        schema:
          type: string
          allowEmptyValues: false
          format: uuid

    get:
      summary: Get Article Information
      responses:
        200:
          description: Article List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
      
  
